package virtualmachine;
/**
 * java内存模型
 * @author gaobo
 *
 */
public class MemoryModel {

	//JAVA内存模型规定了所有变量都存储在主内存中（虚拟机内存都一部分），每个线程工作内存保存了该线程该线程使用都变量主内存副本拷贝，线程对变量对所有操作都在工作内存中完成，
	//主存主要对应java堆中部分，而工作内存对应虚拟机栈中都区域，虚拟机会让工作内存优先存储于寄存器和高速缓存中
	
	//lock（锁定）：作用于主存中都变量，它把一个变量标识为一条线程单独占有都状态。
	//unlock(解锁)：作用于主存中
	//read（读取）：作用于主存都变量，把一个变量的值从主存中传输到工作内存中
	//load(载入)：作用于工作内存中，把read操作的值从主存得到的变量值方法工作内存的变量副本中。
	//use(使用) ：作用于工作内存的变量，将工作内存中的一个变量的值传递给执行引擎，每当虚拟机遇到一个需要使用变量的值的字节码指令将会执行这个操作。
	//assign(赋值)：作用于工作内存，它将一个从执行引擎接收到的值赋给工作内存的变量，每当虚拟机需要一个赋值的字节码指令的时候使用该操作。
	//store（存储）：作用于工作内存，将工作内存的一个变量的值传送到主存中，以便write使用
	//write（写入）：作用于主存，它将store操作从工作内存中获得的变量的值放入主内存的变量中。
}
